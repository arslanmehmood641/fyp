//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventHub_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EventHubEntities : DbContext
    {
        public EventHubEntities()
            : base("name=EventHubEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BookingMedia> BookingMedias { get; set; }
        public DbSet<Booking> Bookings { get; set; }
        public DbSet<Caterer> Caterers { get; set; }
        public DbSet<CatererBooking> CatererBookings { get; set; }
        public DbSet<Check> Checks { get; set; }
        public DbSet<hall> halls { get; set; }
        public DbSet<Medium> Media { get; set; }
        public DbSet<Seller> Sellers { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<GetCaterer_Result> GetCaterer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCaterer_Result>("GetCaterer");
        }
    
        public virtual ObjectResult<GetHalls_Result> GetHalls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHalls_Result>("GetHalls");
        }
    
        public virtual ObjectResult<GetMedia_Result> GetMedia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMedia_Result>("GetMedia");
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser");
        }
    
        public virtual ObjectResult<OwnerPendingReqquests_Result> OwnerPendingReqquests(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OwnerPendingReqquests_Result>("OwnerPendingReqquests", idParameter);
        }
    
        public virtual ObjectResult<OwnerPendingRequestCaterer_Result> OwnerPendingRequestCaterer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OwnerPendingRequestCaterer_Result>("OwnerPendingRequestCaterer", idParameter);
        }
    
        public virtual ObjectResult<OwnerPendingRequestMedia_Result> OwnerPendingRequestMedia(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OwnerPendingRequestMedia_Result>("OwnerPendingRequestMedia", idParameter);
        }
    
        public virtual ObjectResult<UserLogin_Result> UserLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin_Result>("UserLogin", emailParameter, passwordParameter);
        }
    }
}
